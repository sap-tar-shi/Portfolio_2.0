{"ast":null,"code":"var _jsxFileName = \"/Users/sap_tar_shi/Portfolio/my-portfolio/src/Components/sphere.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvas = document.getElementById('canvas');\nconst texts = ['HTML5', 'Javascript', 'Scala', 'Kotlin', 'Erlang', 'CSS', 'Python', 'Java', 'PostgreSQL', 'MongoDB', 'Android', 'TensorFlow', 'Flask', 'React', 'Redis', 'NodeJS', 'OCaml', 'Redux', 'Rx'];\nconst counts = [1, 2, 4, 5, 4, 2, 1];\nconst options = {\n  tilt: Math.PI / 9,\n  initialVelocityX: 0.09,\n  initialVelocityY: 0.09,\n  initialRotationX: Math.PI * 0.14,\n  initialRotationZ: 0\n};\nuseEffect(() => {\n  wordSphere(canvas, texts, counts, options);\n  /**\n   * WordSphere\n   * Written by Hyojun Kim in 2017. Licensed in MIT.\n   */\n\n  function wordSphere(canvas, texts, counts, options) {\n    const π = Math.PI; // happy math!\n\n    const {\n      width = 500,\n      height = 500,\n      radius = 150,\n      padding = 50,\n      fontSize = 22,\n      tilt = 0,\n      initialVelocityX = 0,\n      initialVelocityY = 0,\n      initialRotationX = 0,\n      initialRotationZ = 0\n    } = options;\n    let vx = initialVelocityX,\n        vy = initialVelocityY;\n    let rx = initialRotationX,\n        rz = initialRotationZ;\n    let dx, dy; // canvas setup\n\n    let ctx = canvas.getContext('2d');\n    ctx.textAlign = 'center'; // Hi-DPI support\n\n    canvas.width = width * 2;\n    canvas.height = height * 2;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.scale(2, 2); // scrolling\n\n    let clicked = false,\n        lastX,\n        lastY;\n    canvas.addEventListener('mousedown', event => {\n      clicked = true;\n      lastX = event.screenX;\n      lastY = event.screenY;\n    });\n    canvas.addEventListener('mousemove', event => {\n      if (!clicked) return;\n      [dx, dy] = [event.screenX - lastX, event.screenY - lastY];\n      [lastX, lastY] = [event.screenX, event.screenY]; // rotation update\n\n      rz += -dy * 0.01;\n      rx += dx * 0.01; // velocity update\n\n      vx = dx * 0.1;\n      vy = dy * 0.1;\n      if (!looping) startLoop();\n    });\n    canvas.addEventListener('mouseup', e => clicked = false);\n    canvas.addEventListener('mouseleave', e => clicked = false);\n\n    function rot(x, y, t) {\n      return [x * Math.cos(t) - y * Math.sin(t), x * Math.sin(t) + y * Math.cos(t)];\n    }\n\n    function render() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      let ix = 0,\n          iz = 0,\n          i = 1;\n\n      for (const text of texts) {\n        const degZ = π / (counts.length - 1) * iz;\n        const degX = 2 * π / counts[iz] * ix;\n        let x = radius * Math.sin(degZ) * Math.cos(degX);\n        let y = radius * Math.sin(degZ) * Math.sin(degX);\n        let z = radius * Math.cos(degZ) + 8 * (ix % 2)\n        /* randomness */\n        ; // camera transform\n\n        [y, z] = rot(y, z, tilt);\n        [x, z] = rot(x, z, rz);\n        [x, y] = rot(x, y, rx); // convert to cartesian and then draw.\n\n        const alpha = 0.6 + 0.4 * (x / radius);\n        const size = fontSize + 2 + 5 * (x / radius);\n        ctx.fillStyle = `rgba(0,0,0,${alpha})`;\n        ctx.font = `${size}px \"Helvetica Neue\", sans-serif`;\n        ctx.fillText(text, y + width / 2, -z + height / 2);\n        ix--;\n\n        if (ix < 0) {\n          iz++;\n          ix = counts[iz] - 1;\n        }\n\n        i++;\n      }\n    } // renderer\n\n\n    let looping = false;\n\n    function rendererLoop() {\n      if (looping) window.requestAnimationFrame(rendererLoop);\n      render(); // deacceleration - dirty code xD\n\n      if (vx > 0) vx = vx - 0.01;\n      if (vy > 0) vy = vy - 0.01;\n      if (vx < 0) vx = vx + 0.01;\n      if (vy > 0) vy = vy + 0.01;\n      if (vx == 0 && vy == 0) stopLoop();\n      rz += vy * 0.01;\n      rx += vx * 0.01;\n    }\n\n    function startLoop() {\n      looping = true;\n      window.requestAnimationFrame(rendererLoop);\n    }\n\n    function stopLoop() {\n      looping = false;\n    }\n\n    startLoop();\n  }\n}, []);\n\nconst Sphere = () => {\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Sphere;\nexport default Sphere;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sphere\");","map":{"version":3,"sources":["/Users/sap_tar_shi/Portfolio/my-portfolio/src/Components/sphere.js"],"names":["React","useEffect","canvas","document","getElementById","texts","counts","options","tilt","Math","PI","initialVelocityX","initialVelocityY","initialRotationX","initialRotationZ","wordSphere","π","width","height","radius","padding","fontSize","vx","vy","rx","rz","dx","dy","ctx","getContext","textAlign","style","scale","clicked","lastX","lastY","addEventListener","event","screenX","screenY","looping","startLoop","e","rot","x","y","t","cos","sin","render","clearRect","ix","iz","i","text","degZ","length","degX","z","alpha","size","fillStyle","font","fillText","rendererLoop","window","requestAnimationFrame","stopLoop","Sphere"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AAEA,MAAMC,KAAK,GAAG,CACZ,OADY,EACH,YADG,EACW,OADX,EACoB,QADpB,EAC8B,QAD9B,EAEZ,KAFY,EAEL,QAFK,EAEK,MAFL,EAEa,YAFb,EAE2B,SAF3B,EAGZ,SAHY,EAGD,YAHC,EAGa,OAHb,EAGsB,OAHtB,EAG+B,OAH/B,EAIZ,QAJY,EAIF,OAJE,EAIO,OAJP,EAIgB,IAJhB,CAAd;AAMA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAf;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAEC,IAAI,CAACC,EAAL,GAAU,CADF;AAEdC,EAAAA,gBAAgB,EAAE,IAFJ;AAGdC,EAAAA,gBAAgB,EAAE,IAHJ;AAIdC,EAAAA,gBAAgB,EAAEJ,IAAI,CAACC,EAAL,GAAU,IAJd;AAKdI,EAAAA,gBAAgB,EAAE;AALJ,CAAhB;AAOAb,SAAS,CAAC,MAAM;AACdc,EAAAA,UAAU,CAACb,MAAD,EAASG,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,CAAV;AAEF;AACA;AACA;AACA;;AACA,WAASQ,UAAT,CAAoBb,MAApB,EAA4BG,KAA5B,EAAmCC,MAAnC,EAA2CC,OAA3C,EAAoD;AAClD,UAAMS,CAAC,GAAGP,IAAI,CAACC,EAAf,CADkD,CAC/B;;AACnB,UAAM;AACJO,MAAAA,KAAK,GAAG,GADJ;AAEJC,MAAAA,MAAM,GAAG,GAFL;AAGJC,MAAAA,MAAM,GAAG,GAHL;AAIJC,MAAAA,OAAO,GAAG,EAJN;AAKJC,MAAAA,QAAQ,GAAG,EALP;AAMJb,MAAAA,IAAI,GAAG,CANH;AAOJG,MAAAA,gBAAgB,GAAG,CAPf;AAQJC,MAAAA,gBAAgB,GAAG,CARf;AASJC,MAAAA,gBAAgB,GAAG,CATf;AAUJC,MAAAA,gBAAgB,GAAG;AAVf,QAWFP,OAXJ;AAaA,QAAIe,EAAE,GAAGX,gBAAT;AAAA,QAA2BY,EAAE,GAAGX,gBAAhC;AACA,QAAIY,EAAE,GAAGX,gBAAT;AAAA,QAA2BY,EAAE,GAAGX,gBAAhC;AACA,QAAIY,EAAJ,EAAQC,EAAR,CAjBkD,CAmBlD;;AACA,QAAIC,GAAG,GAAG1B,MAAM,CAAC2B,UAAP,CAAkB,IAAlB,CAAV;AACAD,IAAAA,GAAG,CAACE,SAAJ,GAAgB,QAAhB,CArBkD,CAuBlD;;AACA5B,IAAAA,MAAM,CAACe,KAAP,GAAeA,KAAK,GAAG,CAAvB;AACAf,IAAAA,MAAM,CAACgB,MAAP,GAAgBA,MAAM,GAAG,CAAzB;AACAhB,IAAAA,MAAM,CAAC6B,KAAP,CAAad,KAAb,GAAsB,GAAEA,KAAM,IAA9B;AACAf,IAAAA,MAAM,CAAC6B,KAAP,CAAab,MAAb,GAAuB,GAAEA,MAAO,IAAhC;AACAU,IAAAA,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAY,CAAZ,EA5BkD,CA8BlD;;AACA,QAAIC,OAAO,GAAG,KAAd;AAAA,QAAqBC,KAArB;AAAA,QAA4BC,KAA5B;AACAjC,IAAAA,MAAM,CAACkC,gBAAP,CAAwB,WAAxB,EAAqCC,KAAK,IAAI;AAC5CJ,MAAAA,OAAO,GAAG,IAAV;AACAC,MAAAA,KAAK,GAAGG,KAAK,CAACC,OAAd;AACAH,MAAAA,KAAK,GAAGE,KAAK,CAACE,OAAd;AACD,KAJD;AAKArC,IAAAA,MAAM,CAACkC,gBAAP,CAAwB,WAAxB,EAAqCC,KAAK,IAAI;AAC5C,UAAI,CAACJ,OAAL,EAAc;AACd,OAACP,EAAD,EAAKC,EAAL,IAAW,CAACU,KAAK,CAACC,OAAN,GAAgBJ,KAAjB,EAAwBG,KAAK,CAACE,OAAN,GAAgBJ,KAAxC,CAAX;AACA,OAACD,KAAD,EAAQC,KAAR,IAAiB,CAACE,KAAK,CAACC,OAAP,EAAgBD,KAAK,CAACE,OAAtB,CAAjB,CAH4C,CAK5C;;AACAd,MAAAA,EAAE,IAAI,CAACE,EAAD,GAAM,IAAZ;AACAH,MAAAA,EAAE,IAAIE,EAAE,GAAG,IAAX,CAP4C,CAS5C;;AACAJ,MAAAA,EAAE,GAAGI,EAAE,GAAG,GAAV;AACAH,MAAAA,EAAE,GAAGI,EAAE,GAAG,GAAV;AAEA,UAAI,CAACa,OAAL,EAAcC,SAAS;AACxB,KAdD;AAeAvC,IAAAA,MAAM,CAACkC,gBAAP,CAAwB,SAAxB,EAAmCM,CAAC,IAAIT,OAAO,GAAG,KAAlD;AACA/B,IAAAA,MAAM,CAACkC,gBAAP,CAAwB,YAAxB,EAAsCM,CAAC,IAAIT,OAAO,GAAG,KAArD;;AAEA,aAASU,GAAT,CAAaC,CAAb,EAAeC,CAAf,EAAiBC,CAAjB,EAAoB;AAClB,aAAO,CAACF,CAAC,GAACnC,IAAI,CAACsC,GAAL,CAASD,CAAT,CAAF,GAAcD,CAAC,GAACpC,IAAI,CAACuC,GAAL,CAASF,CAAT,CAAjB,EAA8BF,CAAC,GAACnC,IAAI,CAACuC,GAAL,CAASF,CAAT,CAAF,GAAcD,CAAC,GAACpC,IAAI,CAACsC,GAAL,CAASD,CAAT,CAA9C,CAAP;AACD;;AAED,aAASG,MAAT,GAAkB;AAChBrB,MAAAA,GAAG,CAACsB,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBhD,MAAM,CAACe,KAA3B,EAAkCf,MAAM,CAACgB,MAAzC;AAEA,UAAIiC,EAAE,GAAG,CAAT;AAAA,UAAYC,EAAE,GAAG,CAAjB;AAAA,UAAoBC,CAAC,GAAG,CAAxB;;AACA,WAAK,MAAMC,IAAX,IAAmBjD,KAAnB,EAA0B;AACxB,cAAMkD,IAAI,GAAIvC,CAAC,IAAEV,MAAM,CAACkD,MAAP,GAAc,CAAhB,CAAF,GAAwBJ,EAArC;AACA,cAAMK,IAAI,GAAI,IAAEzC,CAAF,GAAIV,MAAM,CAAC8C,EAAD,CAAX,GAAmBD,EAAhC;AAEA,YAAIP,CAAC,GAAGzB,MAAM,GAAGV,IAAI,CAACuC,GAAL,CAASO,IAAT,CAAT,GAA0B9C,IAAI,CAACsC,GAAL,CAASU,IAAT,CAAlC;AACA,YAAIZ,CAAC,GAAG1B,MAAM,GAAGV,IAAI,CAACuC,GAAL,CAASO,IAAT,CAAT,GAA0B9C,IAAI,CAACuC,GAAL,CAASS,IAAT,CAAlC;AACA,YAAIC,CAAC,GAAGvC,MAAM,GAAGV,IAAI,CAACsC,GAAL,CAASQ,IAAT,CAAT,GAA0B,KAAGJ,EAAE,GAAG,CAAR;AAAW;AAA7C,SANwB,CAQxB;;AACA,SAACN,CAAD,EAAGa,CAAH,IAAQf,GAAG,CAACE,CAAD,EAAIa,CAAJ,EAAOlD,IAAP,CAAX;AACA,SAACoC,CAAD,EAAGc,CAAH,IAAQf,GAAG,CAACC,CAAD,EAAIc,CAAJ,EAAOjC,EAAP,CAAX;AACA,SAACmB,CAAD,EAAGC,CAAH,IAAQF,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOrB,EAAP,CAAX,CAXwB,CAaxB;;AACA,cAAMmC,KAAK,GAAG,MAAM,OAAOf,CAAC,GAACzB,MAAT,CAApB;AACA,cAAMyC,IAAI,GAAGvC,QAAQ,GAAG,CAAX,GAAe,KAAGuB,CAAC,GAACzB,MAAL,CAA5B;AACAS,QAAAA,GAAG,CAACiC,SAAJ,GAAiB,cAAaF,KAAM,GAApC;AACA/B,QAAAA,GAAG,CAACkC,IAAJ,GAAY,GAAEF,IAAK,iCAAnB;AACAhC,QAAAA,GAAG,CAACmC,QAAJ,CAAaT,IAAb,EAAmBT,CAAC,GAAG5B,KAAK,GAAC,CAA7B,EAAgC,CAACyC,CAAD,GAAKxC,MAAM,GAAC,CAA5C;AAEAiC,QAAAA,EAAE;;AACF,YAAIA,EAAE,GAAG,CAAT,EAAY;AACVC,UAAAA,EAAE;AACFD,UAAAA,EAAE,GAAG7C,MAAM,CAAC8C,EAAD,CAAN,GAAa,CAAlB;AACD;;AACDC,QAAAA,CAAC;AACF;AACF,KA1FiD,CA4FlD;;;AACA,QAAIb,OAAO,GAAG,KAAd;;AACA,aAASwB,YAAT,GAAwB;AACtB,UAAIxB,OAAJ,EAAayB,MAAM,CAACC,qBAAP,CAA6BF,YAA7B;AACbf,MAAAA,MAAM,GAFgB,CAItB;;AACA,UAAI3B,EAAE,GAAG,CAAT,EAAYA,EAAE,GAAGA,EAAE,GAAG,IAAV;AACZ,UAAIC,EAAE,GAAG,CAAT,EAAYA,EAAE,GAAGA,EAAE,GAAG,IAAV;AACZ,UAAID,EAAE,GAAG,CAAT,EAAYA,EAAE,GAAGA,EAAE,GAAG,IAAV;AACZ,UAAIC,EAAE,GAAG,CAAT,EAAYA,EAAE,GAAGA,EAAE,GAAG,IAAV;AACZ,UAAID,EAAE,IAAI,CAAN,IAAWC,EAAE,IAAI,CAArB,EAAwB4C,QAAQ;AAEhC1C,MAAAA,EAAE,IAAIF,EAAE,GAAG,IAAX;AACAC,MAAAA,EAAE,IAAIF,EAAE,GAAG,IAAX;AACD;;AAED,aAASmB,SAAT,GAAqB;AACnBD,MAAAA,OAAO,GAAG,IAAV;AACAyB,MAAAA,MAAM,CAACC,qBAAP,CAA6BF,YAA7B;AACD;;AAED,aAASG,QAAT,GAAoB;AAClB3B,MAAAA,OAAO,GAAG,KAAV;AACD;;AACDC,IAAAA,SAAS;AACV;AACA,CA9HQ,EA8HN,EA9HM,CAAT;;AAmIA,MAAM2B,MAAM,GAAG,MAAM;AACnB,sBAAO;AAAQ,IAAA,EAAE,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,M;AAGN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nconst canvas = document.getElementById('canvas');\n\nconst texts = [\n  'HTML5', 'Javascript', 'Scala', 'Kotlin', 'Erlang',\n  'CSS', 'Python', 'Java', 'PostgreSQL', 'MongoDB',\n  'Android', 'TensorFlow', 'Flask', 'React', 'Redis',\n  'NodeJS', 'OCaml', 'Redux', 'Rx',\n];\nconst counts = [1,2,4,5,4,2,1];\n\nconst options = {\n  tilt: Math.PI / 9,\n  initialVelocityX: 0.09,\n  initialVelocityY: 0.09,\n  initialRotationX: Math.PI * 0.14,\n  initialRotationZ: 0\n};\nuseEffect(() => {\n  wordSphere(canvas, texts, counts, options);\n \n/**\n * WordSphere\n * Written by Hyojun Kim in 2017. Licensed in MIT.\n */\nfunction wordSphere(canvas, texts, counts, options) {\n  const π = Math.PI; // happy math!\n  const {\n    width = 500,\n    height = 500,\n    radius = 150,\n    padding = 50,\n    fontSize = 22,\n    tilt = 0,\n    initialVelocityX = 0,\n    initialVelocityY = 0,\n    initialRotationX = 0,\n    initialRotationZ = 0,\n  } = options;\n  \n  let vx = initialVelocityX, vy = initialVelocityY;\n  let rx = initialRotationX, rz = initialRotationZ;\n  let dx, dy;\n  \n  // canvas setup\n  let ctx = canvas.getContext('2d'); \n  ctx.textAlign = 'center';\n  \n  // Hi-DPI support\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  ctx.scale(2,2); \n\n  // scrolling\n  let clicked = false, lastX, lastY;\n  canvas.addEventListener('mousedown', event => {\n    clicked = true;\n    lastX = event.screenX;\n    lastY = event.screenY;\n  });\n  canvas.addEventListener('mousemove', event => {\n    if (!clicked) return;\n    [dx, dy] = [event.screenX - lastX, event.screenY - lastY];\n    [lastX, lastY] = [event.screenX, event.screenY];\n\n    // rotation update\n    rz += -dy * 0.01;\n    rx += dx * 0.01;\n\n    // velocity update\n    vx = dx * 0.1;\n    vy = dy * 0.1;\n\n    if (!looping) startLoop();\n  });\n  canvas.addEventListener('mouseup', e => clicked = false);\n  canvas.addEventListener('mouseleave', e => clicked = false);\n  \n  function rot(x,y,t) {\n    return [x*Math.cos(t)-y*Math.sin(t), x*Math.sin(t)+y*Math.cos(t)];\n  }\n\n  function render() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    let ix = 0, iz = 0, i = 1;\n    for (const text of texts) {\n      const degZ = (π/(counts.length-1)) * iz;\n      const degX = (2*π/counts[iz]) * ix;\n\n      let x = radius * Math.sin(degZ) * Math.cos(degX);\n      let y = radius * Math.sin(degZ) * Math.sin(degX); \n      let z = radius * Math.cos(degZ) + 8*(ix % 2) /* randomness */;\n\n      // camera transform\n      [y,z] = rot(y, z, tilt);\n      [x,z] = rot(x, z, rz);\n      [x,y] = rot(x, y, rx);\n\n      // convert to cartesian and then draw.\n      const alpha = 0.6 + 0.4 * (x/radius);\n      const size = fontSize + 2 + 5*(x/radius);\n      ctx.fillStyle = `rgba(0,0,0,${alpha})`;\n      ctx.font = `${size}px \"Helvetica Neue\", sans-serif`;\n      ctx.fillText(text, y + width/2, -z + height/2);\n\n      ix--;\n      if (ix < 0) {\n        iz++;\n        ix = counts[iz] - 1;\n      }\n      i++;\n    }\n  }\n\n  // renderer\n  let looping = false;\n  function rendererLoop() {\n    if (looping) window.requestAnimationFrame(rendererLoop);\n    render();\n    \n    // deacceleration - dirty code xD\n    if (vx > 0) vx = vx - 0.01;\n    if (vy > 0) vy = vy - 0.01;\n    if (vx < 0) vx = vx + 0.01;\n    if (vy > 0) vy = vy + 0.01;\n    if (vx == 0 && vy == 0) stopLoop();\n    \n    rz += vy * 0.01;\n    rx += vx * 0.01;\n  }\n\n  function startLoop() {\n    looping = true;\n    window.requestAnimationFrame(rendererLoop);\n  }\n\n  function stopLoop() {\n    looping = false;\n  }\n  startLoop();\n}\n}, []);\n\n\n\n\nconst Sphere = () => {\n  return <canvas id=\"canvas\"></canvas>;\n};\nexport default Sphere;\n"]},"metadata":{},"sourceType":"module"}