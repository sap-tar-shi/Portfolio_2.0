{"ast":null,"code":"var _jsxFileName = \"/Users/sap_tar_shi/Portfolio/my-portfolio/src/Components/sphere.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvas = document.getElementById(\"canvas\");\nconst texts = [\"HTML5\", \"Javascript\", \"CSS\", \"C\", \"C++\", \"Python\", \"Java\", \"MongoDB\", \"mySQL\", \"TensorFlow\", \"Django\", \"React\", \"NodeJS\"];\nconst counts = [1, 2, 4, 5, 4, 2, 1];\nconst options = {\n  tilt: Math.PI / 9,\n  initialVelocityX: 0.09,\n  initialVelocityY: 0.09,\n  initialRotationX: Math.PI * 0.14,\n  initialRotationZ: 0\n};\nwordSphere(canvas, texts, counts, options);\n/**\n * WordSphere\n * Written by Hyojun Kim in 2017. Licensed in MIT.\n */\n\nfunction wordSphere(canvas, texts, counts, options) {\n  const π = Math.PI; // happy math!\n\n  const {\n    width = 500,\n    height = 500,\n    radius = 150,\n    padding = 50,\n    fontSize = 22,\n    tilt = 0,\n    initialVelocityX = 0,\n    initialVelocityY = 0,\n    initialRotationX = 0,\n    initialRotationZ = 0\n  } = options;\n  let vx = initialVelocityX,\n      vy = initialVelocityY;\n  let rx = initialRotationX,\n      rz = initialRotationZ;\n  let dx, dy; // canvas setup\n\n  let ctx = canvas.getContext(\"2d\");\n  ctx.textAlign = \"center\"; // Hi-DPI support\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  ctx.scale(2, 2); // scrolling\n\n  let clicked = false,\n      lastX,\n      lastY;\n  canvas.addEventListener(\"mousedown\", event => {\n    clicked = true;\n    lastX = event.screenX;\n    lastY = event.screenY;\n  });\n  canvas.addEventListener(\"mousemove\", event => {\n    if (!clicked) return;\n    [dx, dy] = [event.screenX - lastX, event.screenY - lastY];\n    [lastX, lastY] = [event.screenX, event.screenY]; // rotation update\n\n    rz += -dy * 0.01;\n    rx += dx * 0.01; // velocity update\n\n    vx = dx * 0.1;\n    vy = dy * 0.1;\n    if (!looping) startLoop();\n  });\n  canvas.addEventListener(\"mouseup\", e => clicked = false);\n  canvas.addEventListener(\"mouseleave\", e => clicked = false);\n\n  function rot(x, y, t) {\n    return [x * Math.cos(t) - y * Math.sin(t), x * Math.sin(t) + y * Math.cos(t)];\n  }\n\n  function render() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    let ix = 0,\n        iz = 0,\n        i = 1;\n\n    for (const text of texts) {\n      const degZ = π / (counts.length - 1) * iz;\n      const degX = 2 * π / counts[iz] * ix;\n      let x = radius * Math.sin(degZ) * Math.cos(degX);\n      let y = radius * Math.sin(degZ) * Math.sin(degX);\n      let z = radius * Math.cos(degZ) + 8 * (ix % 2);\n      /* randomness */\n      // camera transform\n\n      [y, z] = rot(y, z, tilt);\n      [x, z] = rot(x, z, rz);\n      [x, y] = rot(x, y, rx); // convert to cartesian and then draw.\n\n      const alpha = 0.6 + 0.4 * (x / radius);\n      const size = fontSize + 2 + 5 * (x / radius);\n      ctx.fillStyle = `rgba(37, 255, 55,${alpha})`;\n      ctx.font = `${size}px \"Helvetica Neue\", sans-serif`;\n      ctx.fillText(text, y + width / 2, -z + height / 2);\n      ix--;\n\n      if (ix < 0) {\n        iz++;\n        ix = counts[iz] - 1;\n      }\n\n      i++;\n    }\n  } // renderer\n\n\n  let looping = false;\n\n  function rendererLoop() {\n    if (looping) window.requestAnimationFrame(rendererLoop);\n    render(); // deacceleration - dirty code xD\n\n    if (vx > 0) vx = vx - 0.01;\n    if (vy > 0) vy = vy - 0.01;\n    if (vx < 0) vx = vx + 0.01;\n    if (vy > 0) vy = vy + 0.01;\n    if (vx === 0 && vy === 0) stopLoop();\n    rz += vy * 0.01;\n    rx += vx * 0.01;\n  }\n\n  function startLoop() {\n    looping = true;\n    window.requestAnimationFrame(rendererLoop);\n  }\n\n  function stopLoop() {\n    looping = false;\n  }\n\n  startLoop();\n}\n\nconst Sphere = () => {\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Sphere;\nexport default Sphere;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sphere\");","map":{"version":3,"sources":["/Users/sap_tar_shi/Portfolio/my-portfolio/src/Components/sphere.js"],"names":["React","canvas","document","getElementById","texts","counts","options","tilt","Math","PI","initialVelocityX","initialVelocityY","initialRotationX","initialRotationZ","wordSphere","π","width","height","radius","padding","fontSize","vx","vy","rx","rz","dx","dy","ctx","getContext","textAlign","style","scale","clicked","lastX","lastY","addEventListener","event","screenX","screenY","looping","startLoop","e","rot","x","y","t","cos","sin","render","clearRect","ix","iz","i","text","degZ","length","degX","z","alpha","size","fillStyle","font","fillText","rendererLoop","window","requestAnimationFrame","stopLoop","Sphere"],"mappings":"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","sourcesContent":["import React from \"react\";\nconst canvas = document.getElementById(\"canvas\");\n\nconst texts = [\n  \"HTML5\",\n  \"Javascript\",\n  \"CSS\",\n  \"C\",\n  \"C++\",\n  \"Python\",\n  \"Java\",\n  \"MongoDB\",\n  \"mySQL\",\n  \"TensorFlow\",\n  \"Django\",\n  \"React\",\n  \"NodeJS\",\n];\nconst counts = [1, 2, 4, 5, 4, 2, 1];\n\nconst options = {\n  tilt: Math.PI / 9,\n  initialVelocityX: 0.09,\n  initialVelocityY: 0.09,\n  initialRotationX: Math.PI * 0.14,\n  initialRotationZ: 0,\n};\n\nwordSphere(canvas, texts, counts, options);\n\n/**\n * WordSphere\n * Written by Hyojun Kim in 2017. Licensed in MIT.\n */\nfunction wordSphere(canvas, texts, counts, options) {\n  const π = Math.PI; // happy math!\n  const {\n    width = 500,\n    height = 500,\n    radius = 150,\n    padding = 50,\n    fontSize = 22,\n    tilt = 0,\n    initialVelocityX = 0,\n    initialVelocityY = 0,\n    initialRotationX = 0,\n    initialRotationZ = 0,\n  } = options;\n\n  let vx = initialVelocityX,\n    vy = initialVelocityY;\n  let rx = initialRotationX,\n    rz = initialRotationZ;\n  let dx, dy;\n\n  // canvas setup\n  let ctx = canvas.getContext(\"2d\");\n  ctx.textAlign = \"center\";\n\n  // Hi-DPI support\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  ctx.scale(2, 2);\n\n  // scrolling\n  let clicked = false,\n    lastX,\n    lastY;\n  canvas.addEventListener(\"mousedown\", (event) => {\n    clicked = true;\n    lastX = event.screenX;\n    lastY = event.screenY;\n  });\n  canvas.addEventListener(\"mousemove\", (event) => {\n    if (!clicked) return;\n    [dx, dy] = [event.screenX - lastX, event.screenY - lastY];\n    [lastX, lastY] = [event.screenX, event.screenY];\n\n    // rotation update\n    rz += -dy * 0.01;\n    rx += dx * 0.01;\n\n    // velocity update\n    vx = dx * 0.1;\n    vy = dy * 0.1;\n\n    if (!looping) startLoop();\n  });\n  canvas.addEventListener(\"mouseup\", (e) => (clicked = false));\n  canvas.addEventListener(\"mouseleave\", (e) => (clicked = false));\n\n  function rot(x, y, t) {\n    return [\n      x * Math.cos(t) - y * Math.sin(t),\n      x * Math.sin(t) + y * Math.cos(t),\n    ];\n  }\n\n  function render() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    let ix = 0,\n      iz = 0,\n      i = 1;\n    for (const text of texts) {\n      const degZ = (π / (counts.length - 1)) * iz;\n      const degX = ((2 * π) / counts[iz]) * ix;\n\n      let x = radius * Math.sin(degZ) * Math.cos(degX);\n      let y = radius * Math.sin(degZ) * Math.sin(degX);\n      let z = radius * Math.cos(degZ) + 8 * (ix % 2); /* randomness */\n\n      // camera transform\n      [y, z] = rot(y, z, tilt);\n      [x, z] = rot(x, z, rz);\n      [x, y] = rot(x, y, rx);\n\n      // convert to cartesian and then draw.\n      const alpha = 0.6 + 0.4 * (x / radius);\n      const size = fontSize + 2 + 5 * (x / radius);\n      ctx.fillStyle = `rgba(37, 255, 55,${alpha})`;\n      ctx.font = `${size}px \"Helvetica Neue\", sans-serif`;\n      ctx.fillText(text, y + width / 2, -z + height / 2);\n\n      ix--;\n      if (ix < 0) {\n        iz++;\n        ix = counts[iz] - 1;\n      }\n      i++;\n    }\n  }\n\n  // renderer\n  let looping = false;\n  function rendererLoop() {\n    if (looping) window.requestAnimationFrame(rendererLoop);\n    render();\n\n    // deacceleration - dirty code xD\n    if (vx > 0) vx = vx - 0.01;\n    if (vy > 0) vy = vy - 0.01;\n    if (vx < 0) vx = vx + 0.01;\n    if (vy > 0) vy = vy + 0.01;\n    if (vx === 0 && vy === 0) stopLoop();\n\n    rz += vy * 0.01;\n    rx += vx * 0.01;\n  }\n\n  function startLoop() {\n    looping = true;\n    window.requestAnimationFrame(rendererLoop);\n  }\n\n  function stopLoop() {\n    looping = false;\n  }\n  startLoop();\n}\n\nconst Sphere = () => {\n  return <canvas id=\"canvas\"></canvas>;\n};\nexport default Sphere;\n"]},"metadata":{},"sourceType":"module"}